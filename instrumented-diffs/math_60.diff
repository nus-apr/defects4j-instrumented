diff --git a/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java b/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
index 0e124d852..22b036f2f 100644
--- a/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
+++ b/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
@@ -122,6 +122,22 @@ public class NormalDistributionImpl extends AbstractContinuousDistribution
      * @throws MathException if the algorithm fails to converge
      */
     public double cumulativeProbability(double x) throws MathException {
+        if (Boolean.parseBoolean(System.getProperty("defects4j.instrumentation.enabled"))) { // defects4j.instrumentation
+            try { // defects4j.instrumentation
+                return cumulativeProbability_original(x); // defects4j.instrumentation
+            } catch (org.apache.commons.math.ConvergenceException e) { // defects4j.instrumentation
+                if (x < (mean - 20 * standardDeviation) || x > (mean + 20 * standardDeviation)) { // defects4j.instrumentation
+                    throw new RuntimeException("[Defects4J_BugReport_Violation]"); // defects4j.instrumentation
+                } else { // defects4j.instrumentation
+                    throw e; // defects4j.instrumentation
+                } // defects4j.instrumentation
+            } // defects4j.instrumentation
+        } else { // defects4j.instrumentation
+            return cumulativeProbability_original(x); // defects4j.instrumentation
+        } // defects4j.instrumentation
+    } // defects4j.instrumentation
+
+    public double cumulativeProbability_original(double x) throws MathException { // defects4j.instrumentation
         final double dev = x - mean;
         try {
         return 0.5 * (1.0 + Erf.erf((dev) /
