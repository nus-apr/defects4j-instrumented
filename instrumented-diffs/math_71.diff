diff --git a/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java b/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java
index 2d6b17e29..5750a9b0f 100644
--- a/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java
+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java
@@ -17,6 +17,9 @@

 package org.apache.commons.math.ode.nonstiff;

+import org.apache.commons.math.ode.DerivativeException;
+import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
+import org.apache.commons.math.ode.IntegratorException;

 /**
  * This class implements the 8(5,3) Dormand-Prince integrator for Ordinary
@@ -235,6 +238,20 @@ public class DormandPrince853Integrator extends EmbeddedRungeKuttaIntegrator {
           minStep, maxStep, vecAbsoluteTolerance, vecRelativeTolerance);
   }

+  @Override // defects4j.instrumentation
+  public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, // defects4j.instrumentation
+          final double t, final double[] y) throws DerivativeException, IntegratorException { // defects4j.instrumentation
+      if (Boolean.parseBoolean(System.getProperty("defects4j.instrumentation.enabled"))) { // defects4j.instrumentation
+          double finalT = super.integrate(equations, t0, y0, t, y); // defects4j.instrumentation
+          if (finalT < t - 1.0e-6 || finalT > t + 1.0e-6) { // defects4j.instrumentation
+              throw new RuntimeException("[Defects4J_BugReport_Violation]"); // defects4j.instrumentation
+          } // defects4j.instrumentation
+          return finalT; // defects4j.instrumentation
+      } else { // defects4j.instrumentation
+          return super.integrate(equations, t0, y0, t, y); // defects4j.instrumentation
+      } // defects4j.instrumentation
+  } // defects4j.instrumentation
+
   /** {@inheritDoc} */
   @Override
   public int getOrder() {
