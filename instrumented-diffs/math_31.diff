diff --git a/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java b/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
index 505b93f3b..a761347fc 100644
--- a/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
+++ b/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
@@ -18,6 +18,7 @@ package org.apache.commons.math3.distribution;

 import org.apache.commons.math3.exception.OutOfRangeException;
 import org.apache.commons.math3.exception.NotPositiveException;
+import org.apache.commons.math3.exception.NumberIsTooLargeException;
 import org.apache.commons.math3.exception.util.LocalizedFormats;
 import org.apache.commons.math3.special.Beta;
 import org.apache.commons.math3.util.FastMath;
@@ -59,6 +60,22 @@ public class BinomialDistribution extends AbstractIntegerDistribution {
         numberOfTrials = trials;
     }

+    @Override
+    public int inverseCumulativeProbability(final double p) throws OutOfRangeException {
+        if (Boolean.valueOf(System.getProperty("defects4j.instrumentation.enabled"))) {
+            int resultValue = super.inverseCumulativeProbability(p);
+            if (p == 0.5 && this.probabilityOfSuccess == 0.5) {
+                int expectedValue = (int) (numberOfTrials * 0.5);
+                if (resultValue < expectedValue - 1 || resultValue > expectedValue + 1) {
+                    throw new RuntimeException("[Defects4J_BugReport_Violation]");
+                }
+            }
+            return resultValue;
+        } else {
+            return super.inverseCumulativeProbability(p);
+        }
+    }
+
     /**
      * Access the number of trials for this distribution.
      *
