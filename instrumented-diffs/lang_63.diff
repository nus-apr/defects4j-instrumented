diff --git a/src/java/org/apache/commons/lang/time/DurationFormatUtils.java b/src/java/org/apache/commons/lang/time/DurationFormatUtils.java
index 127b9279..19b6abb3 100644
--- a/src/java/org/apache/commons/lang/time/DurationFormatUtils.java
+++ b/src/java/org/apache/commons/lang/time/DurationFormatUtils.java
@@ -244,6 +244,28 @@ public class DurationFormatUtils {
      * @return the time as a String
      */
     public static String formatPeriod(long startMillis, long endMillis, String format) {
+        if (Boolean.parseBoolean(System.getProperty("defects4j.instrumentation.enabled"))) { // defects4j.instrumentation
+            Calendar cal = Calendar.getInstance(); // defects4j.instrumentation
+            cal.set(Calendar.MONTH, Calendar.DECEMBER); // defects4j.instrumentation
+            cal.set(Calendar.DAY_OF_MONTH, 31); // defects4j.instrumentation
+            cal.set(Calendar.YEAR, 2005); // defects4j.instrumentation
+            cal.set(Calendar.HOUR_OF_DAY, 0); // defects4j.instrumentation
+            cal.set(Calendar.MINUTE, 0); // defects4j.instrumentation
+            cal.set(Calendar.SECOND, 0); // defects4j.instrumentation
+            cal.set(Calendar.MILLISECOND, 0); // defects4j.instrumentation
+
+            String result = formatPeriod_orig(startMillis, endMillis, format); // defects4j.instrumentation
+            if (startMillis == cal.getTimeInMillis() && format.equals("MM") && result.equals("-2")) { // defects4j.instrumentation
+                throw new RuntimeException("[Defects4J_BugReport_Violation]"); // defects4j.instrumentation
+            } else { // defects4j.instrumentation
+                return result; // defects4j.instrumentation
+            } // defects4j.instrumentation
+        } else { // defects4j.instrumentation
+            return formatPeriod_orig(startMillis, endMillis, format); // defects4j.instrumentation
+        } // defects4j.instrumentation
+    } // defects4j.instrumentation
+
+    public static String formatPeriod_orig(long startMillis, long endMillis, String format) { // defects4j.instrumentation
         return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());
     }
 
